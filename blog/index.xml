<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on charliedyson.net</title><link>https://charliedyson.net/blog/</link><description>Recent content in Blogs on charliedyson.net</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 27 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://charliedyson.net/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Don't Take My Word For It (Part 3): A handy reference table</title><link>https://charliedyson.net/blog/2021/12/dont_take_my_word_for_it_3/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>https://charliedyson.net/blog/2021/12/dont_take_my_word_for_it_3/</guid><description>How are template arguments to a function deduced? We will generate a helpful reference table.</description></item><item><title>Don't Take My Word For It (Part 2): Tricking the compiler</title><link>https://charliedyson.net/blog/2021/12/dont_take_my_word_for_it_2/</link><pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate><guid>https://charliedyson.net/blog/2021/12/dont_take_my_word_for_it_2/</guid><description>Using compiler error messages to accurately determine a type.</description></item><item><title>Don't Take My Word For It (Part 1): Getting the type dynamically</title><link>https://charliedyson.net/blog/2021/12/dont_take_my_word_for_it_1/</link><pubDate>Sat, 25 Dec 2021 00:00:00 +0000</pubDate><guid>https://charliedyson.net/blog/2021/12/dont_take_my_word_for_it_1/</guid><description>Using &lt;code>typeid&lt;/code> to determine an object&amp;rsquo;s type at runtime.</description></item></channel></rss>